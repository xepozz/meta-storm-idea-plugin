<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="meta-storm"
>
    <xs:element name="meta-storm">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded">
                <xs:element name="definitions">
                    <xs:complexType>
                        <xs:choice maxOccurs="unbounded" minOccurs="0">
                            <!--                            <xs:element ref="targets" minOccurs="0" maxOccurs="unbounded"/>-->
                            <xs:element type="target-function" name="function" maxOccurs="unbounded" minOccurs="0"/>
                            <xs:element type="target-classMethod" name="classMethod" maxOccurs="unbounded" minOccurs="0"/>
                        </xs:choice>
                    </xs:complexType>
                </xs:element>

                <xs:element name="collections">
                    <xs:complexType>
                        <xs:choice maxOccurs="unbounded">
                            <xs:element name="attributeArgument" maxOccurs="unbounded" minOccurs="0">
                                <xs:complexType mixed="true">
                                    <xs:attribute type="xs:string" name="name" use="required"/>
                                    <xs:attribute type="xs:string" name="class" use="required"/>
                                    <xs:attribute type="xs:nonNegativeInteger" name="argument" use="required"/>
                                </xs:complexType>
                            </xs:element>
                            <xs:element name="attributeClass" maxOccurs="unbounded" minOccurs="0">
                                <xs:complexType mixed="true">
                                    <xs:attribute type="xs:string" name="name" use="required"/>
                                    <xs:attribute type="xs:string" name="class" use="required"/>
                                </xs:complexType>
                            </xs:element>
                        </xs:choice>
                    </xs:complexType>
                </xs:element>
            </xs:choice>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="related">
        <xs:restriction base="xs:string">
            <xs:enumeration value="file"/>
            <xs:enumeration value="directory"/>
            <xs:enumeration value="project"/>
            <xs:enumeration value="argument"/>
            <xs:enumeration value="variable"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- targets -->
    <xs:element name="targets" abstract="true"/>
    <xs:element name="classMethod" type="target-classMethod" substitutionGroup="targets"/>
    <xs:element name="function" type="target-function" substitutionGroup="targets"/>

    <xs:complexType name="target-classMethod">
        <xs:sequence>
            <xs:element ref="features" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute type="xs:string" name="class" use="required"/>
        <xs:attribute type="xs:string" name="method" use="required"/>
        <xs:attribute type="xs:nonNegativeInteger" name="argument" use="required"/>
    </xs:complexType>
    <xs:complexType name="target-function">
        <xs:sequence>
            <xs:element ref="features" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute type="xs:string" name="name" use="required"/>
        <xs:attribute type="xs:nonNegativeInteger" name="argument" use="required"/>
    </xs:complexType>

    <!-- features -->
    <xs:element name="features" abstract="true"/>
    <xs:element name="files" type="feature-files" substitutionGroup="features"/>
    <xs:element name="properties" type="feature-properties" substitutionGroup="features"/>
    <xs:element name="collection" type="feature-collection" substitutionGroup="features"/>

    <xs:complexType name="feature-files" mixed="true">
        <xs:sequence>
            <xs:element name="directoryProcessors" minOccurs="0">
                <xs:complexType>
                    <xs:choice maxOccurs="unbounded">
                        <xs:element type="processor-append" name="append" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element type="processor-regexp" name="regexp" maxOccurs="unbounded" minOccurs="0"/>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute type="xs:string" name="fileExt" use="required"/>
        <xs:attribute type="related" name="relatedTo" use="required"/>
    </xs:complexType>
    <xs:complexType name="feature-properties" mixed="true">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="related" name="relatedTo" use="required"/>
                <xs:attribute type="xs:nonNegativeInteger" name="relatedArgumentIndex" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="feature-collection" mixed="true">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="name" use="required"/>
                <xs:attribute type="xs:nonNegativeInteger" name="argument" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>


    <!-- processors -->

    <xs:complexType name="processor-append">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="value"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="processor-regexp">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="from" use="required"/>
                <xs:attribute type="xs:string" name="to" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
</xs:schema>
